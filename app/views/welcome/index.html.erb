
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.node {
  stroke: #fff;
  stroke-width: 1.5px;
}

.link {
  stroke: #999;
  stroke-opacity: .6;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 500;

var color = d3.scale.category20();

var force = d3.layout.force()
    .charge(-120)
    .linkDistance(30)
    .size([width, height]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

// need to convert to correct format for nodes inside of the callback
d3.json("data/open_secrets_donor", function(error, data) {
  if (error) throw error;
 // convert list of nodes and links HERE
  var graph = {nodes: [], links: []};
  
  graph.nodes.push({name: "conservatives", total: 0, group: 0});
  graph.nodes.push({name: "liberals", total: 0, group: 0});
  
  data.forEach(function(d, i) {
    graph.nodes.push({name: d.industry, total: +d.total.substring(1), group: 1 });
    graph.nodes[0].total += +d.to_conservatives.substring(1);
    graph.nodes[1].total += +d.to_liberals.substring(1);
    graph.links.push({source: i + 2, target: 0, value: +d.to_conservatives.substring(1) });
    graph.links.push({source: i + 2, target: 1, value: +d.to_liberals.substring(1) });
  });
  
  force
      .nodes(graph.nodes)
      .links(graph.links)
      .start();

  var link = svg.selectAll(".link")
      .data(graph.links)
    .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", function(d) { return Math.sqrt(d.value); });

  var node = svg.selectAll(".node")
      .data(graph.nodes)
    .enter().append("circle")
      .attr("class", "node")
      .attr("r", 5)
      .style("fill", function(d) { return color(d.group); })
      .call(force.drag);

  node.append("title")
      .text(function(d) { return d.name; });

  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    node.attr("cx", function(d) { return d.x; })
        .attr("cy", function(d) { return d.y; });
  });
});

</script>