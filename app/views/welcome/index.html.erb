<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>dark$</title>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.2.0/js/tether.min.js"></script>
  
</head>

<body>
<div class="row">
  <div class="col-md-12">  </div>
</div>

<div id="chart">
  <svg></svg>
</div>

<style> body {
 background-color: #000; 
}</style>

<script>


var transformData = function(data){

  var format = d3.time.format("%Y");

  var appearCount = {};
  var numberOfyears=1;



  data.forEach(function(d) {
    d.key = d.industry;
    d.date = format.parse(d.year);
    d.value = +d.total.substring(1).replace(/,/g, '');
    //console.log('datum : ', d );

    if(!appearCount[d.key]){
      appearCount[d.key] = 1;
    }else{
      var count = appearCount[d.key] + 1;
      if(count > numberOfyears){
        numberOfyears = count;
      }
      appearCount[d.key] = count;
    }
    d;
  });


  var finalIndustriesNames = Object.keys(appearCount).filter(
      function(d){
        return appearCount[d] == numberOfyears;
      }
    );

    var finalIndustries = data.filter(function(d){
      return finalIndustriesNames.find(function(x){ return x == d.key; }) && true || false;
    });


    data = finalIndustries;
    return data;
};


var linda = function(){

/*
{
  key: "Gas & Oil",
  values: [["2014",32434345],["2015",345345]]
}
*/


d3.json("data/open_secrets_donor", function(error, data) {
    if (error) throw error;


  var singleIndustries = {};
  var finalData = [];

  data = transformData(data);

  console.log('data',data);

  data.forEach(function(d){

    if(!singleIndustries[d.key]){
      singleIndustries[d.key] = d;
      singleIndustries[d.key]['values'] = [[d.year,d.value]];
    }else{
      singleIndustries[d.key]['values'].push( [d.year,d.value] );
    }

  });

  Object.keys(singleIndustries).forEach(function(d){
    finalData.push( singleIndustries[d]  );
  });

  console.log(finalData);

  nv.addGraph(function() {
    var chart = nv.models.stackedAreaChart()
                  .margin({right: 100})
                  .x(function(d) { return +d[0] })   //We can modify the data accessor functions...
                  .y(function(d) { return d[1] })   //...in case your data is formatted differently.
                  .useInteractiveGuideline(true)    //Tooltips which show all data points. Very nice!
                  .rightAlignYAxis(true)      //Let's move the y-axis to the right side.
                  //.transitionDuration(500)
                  .showControls(true)       //Allow user to choose 'Stacked', 'Stream', 'Expanded' mode.
                  .clipEdge(true);

    //Format x-axis labels with custom function.
    chart.xAxis
        .tickFormat(function(d) { 
          return d;//d3.time.format('%Y')(new Date(d)) 
    });

    chart.yAxis
        .tickFormat(d3.format(',.2f'));

    d3.select('#chart svg')
      .datum(finalData)
      .call(chart);

    nv.utils.windowResize(chart.update);

    return chart;
  });
});


};

linda();//call linda

</script>
<div class="container">

<div class="row">


<div class="multiple_elements">
    <%= image_tag("dark-money.png", :id => "dark-money-img", :alt => "rss feed") %>
  <h2 id="dark-money-h2">dark$</h2>

  <div class="ct"><small>Hover/tap on the element for instructions!</small></div>
  
  <div class="btn-group">
    <button type="button" class="btn btn-primary ole" data-toggle="tooltip" data-placement="left" data-original-title="Hover over sections of chart render funding totals ">
      Data Hover
    </button>

    <button type="button" class="btn btn-primary ole two" data-toggle="tooltip" data-placement="top" data-original-title="Select a donor category in the top right, to see funding totals progress over time">
      Donor Category
    </button>

    <button type="button" class="btn btn-primary ole three" data-toggle="tooltip" data-placement="bottom" data-original-title="Choose between Stacked, Stream and Expanded Viewing Styles">
      Toggle Views
    </button>

    <button type="button" class="btn btn-primary ole four" data-toggle="tooltip" data-placement="right" data-original-title="click a specific node on a year column for exact donor informatoin">
      Yearly Contribution Data
    </button>
  </div>

</div>

</body>
</html>


</div>
</div>

<div class="row">
<div class="col-xs-1"></div>
<div class="col-xs-10">
 <p class="dark-money-p">The chart above represents "outside spending" by donor industry. The term "outside spending" refers to political expenditures made by groups or individuals independently of, and not coordinated with, candidates' committees. 501(c) <span>"dark money"</span> groups are distinct from super PACs. While both types of entity can raise and spend unlimited sums of money, super PACs "must disclose their donors," while 501(c) groups "must not have politics as their primary purpose but don't have to disclose who gives them money." However, a single individual or group can create both types of entity and combine their powers, making it difficult to trace the original source of funds.</p>

 <caption>Data from http://www.opensecrets.org/</caption>
</div>
<div class="col-xs-1"></div>
</div>
</div>